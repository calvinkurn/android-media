// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: 'buildconfig/dependencies/dependencies.gradle'
apply from: 'buildconfig/dependencies/dependency-libraries.gradle'
apply from: 'buildconfig/dependencies/dependency-features.gradle'
apply from: 'tools/quality.gradle'
apply from: 'tools/composite_build.gradle'

buildscript {
    apply from: 'buildconfig/dependencies/dependencies.gradle'

    repositories {
        gradlePluginPortal()
        google()
        maven { url "https://maven.google.com" }
        jcenter()
        mavenLocal()
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'http://central.maven.org/maven2/' }
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath ('com.android.tools.build:gradle:3.4.2') {
            exclude module: 'proguard-gradle'
        }
        classpath "org.jacoco:org.jacoco.core:$jacocoVersion"
        classpath('net.sf.proguard:proguard-gradle:6.0') {
            force = true
        }
        classpath("org.jfrog.buildinfo:build-info-extractor-gradle:4.9.0") {
            exclude group: 'org.codehaus.groovy', module: 'groovy-all'
        }
        classpath 'com.google.firebase:perf-plugin:1.3.1'
        classpath "com.google.gms:google-services:4.3.3"
        classpath 'io.fabric.tools:gradle:1.28.0'
        classpath "com.vanniktech:gradle-code-quality-tools-plugin:0.17.0"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'com.meituan.robust:gradle-plugin:0.4.99'
        classpath 'com.meituan.robust:auto-patch-plugin:0.4.99'
        classpath 'com.bugsnag:bugsnag-android-gradle-plugin:4.7.3'
        classpath "androidx.benchmark:benchmark-gradle-plugin:1.0.0"
        classpath "android.arch.navigation:navigation-safe-args-gradle-plugin:1.0.0"
    }
}

apply from: 'buildproj.gradle'

//Installing Git Hooks
task installGitHooks(type: Copy) {
    ("cp " + rootProject.rootDir+ "/git_hooks/pre-commit " + rootProject.rootDir+ "/.git/hooks/pre-commit").execute()
    Runtime.getRuntime().exec("chmod -R +x .git/hooks/")
}
clean.dependsOn installGitHooks

