// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: 'buildconfig/dependencies/dependencies.gradle'
apply from: 'buildconfig/dependencies/dependency-libraries.gradle'
//apply from: 'buildconfig/dependencies/dependency-libraries-no-op.gradle'
apply from: 'buildconfig/dependencies/dependency-features.gradle'
//apply from: 'buildconfig/dependencies/dependency-features-no-op.gradle'
apply from: 'tools/quality.gradle'
apply from: 'tools/composite_build.gradle'
apply plugin: 'idea'

buildscript { 
    ext.kotlin_version = '1.3.50'

    ext.jacocoVersion = '0.8.2'
    repositories {
        gradlePluginPortal()
        google()
        maven { url "https://maven.google.com" }
        jcenter()
        mavenLocal()
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'http://central.maven.org/maven2/' }
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath 'com.uber:okbuck:0.41.0'
        classpath ('com.android.tools.build:gradle:3.3.1') {
            exclude module: 'proguard-gradle'
        }
        classpath "org.jacoco:org.jacoco.core:$jacocoVersion"
        classpath('net.sf.proguard:proguard-gradle:6.0') {
            force = true
        }
        classpath("org.jfrog.buildinfo:build-info-extractor-gradle:4.9.0") {
            exclude group: 'org.codehaus.groovy', module: 'groovy-all'
        }
        if (!project.hasProperty("disable-performance-plugin")) {
            classpath('com.google.firebase:firebase-plugins:1.1.1') {
                exclude group: 'com.google.guava', module: 'guava-jdk5'
            }
        }
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.0"
        classpath "com.google.gms:google-services:4.3.0"
        classpath "io.fabric.tools:gradle:1.27.1"
        classpath "com.vanniktech:gradle-code-quality-tools-plugin:0.17.0"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7"
        classpath "com.gradle:gradle-enterprise-gradle-plugin:3.1.1"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version" }
}

apply from: 'buildproj.gradle'
apply plugin: 'com.uber.okbuck'
apply plugin: 'com.gradle.build-scan'

okbuck {

    buildToolVersion = "27.0.3"
    target = "android-28"
    linearAllocHardLimit = [
            customerapp: 10130000,
            sellerapp  : 10130000,
            posapp     : 16000000,
    ]
    extraBuckOpts = [
            'customerappDebug': [
                    "android_binary": ["trim_resource_ids = True"] as Set
            ]
            , 'sellerappDebug': [
            "android_binary": ["trim_resource_ids = True"] as Set
    ]
            , 'posappDebug'   : [
            "android_binary": ["trim_resource_ids = True"] as Set
    ]
    ]

    primaryDexPatterns = [
            'posapp': [
                    '^com/facebook/imagepipeline/memory/PooledByteBuffer^'
            ]
    ]

    intellij {
        sources = true
    }

    lint {
        disabled = true
    }

    wrapper {
        repo = 'https://github.com/facebook/buck.git'
    }

    lint {
        version = "26.0.1"
    }

    buckBinary = "com.github.tokopedia:buck:7c9bdd9e65d5c25eeb5c4c4e2542267b6b6c6900@pex"
}

    buildScan {
        // plugin configuration
        server = "http://http://172.21.57.32"
    }

idea.module {
    excludeDirs += file('build/')
    excludeDirs += file('.buckd/')
    excludeDirs += file('.okbuck/')
    excludeDirs += file('buck-out/')
}

//Installing Git Hooks
task installGitHooks(type: Copy) {
    ("cp " + rootProject.rootDir+ "/git_hooks/pre-commit " + rootProject.rootDir+ "/.git/hooks/pre-commit").execute()
    Runtime.getRuntime().exec("chmod -R +x .git/hooks/")
}
clean.dependsOn installGitHooks
