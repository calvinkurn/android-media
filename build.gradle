// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: 'buildconfig/dependencies/dependencies.gradle'
apply from: 'buildconfig/dependencies/dependency-libraries.gradle'
//apply from: 'buildconfig/dependencies/dependency-libraries-no-op.gradle'
apply from: 'buildconfig/dependencies/dependency-features.gradle'
//apply from: 'buildconfig/dependencies/dependency-features-no-op.gradle'
apply from: 'tools/quality.gradle'
apply from: 'tools/composite_build.gradle'


buildscript {
    ext.jacocoVersion = '0.8.2'
    repositories {
        gradlePluginPortal()
        google()
        maven { url "https://maven.google.com" }
        jcenter()
        mavenLocal()
	maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'http://central.maven.org/maven2/' }
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath 'com.uber:okbuck:0.41.0'
        classpath 'io.sentry:sentry-android-gradle-plugin:1.7.16'
        classpath ('com.android.tools.build:gradle:3.2.0') {
            exclude module: 'proguard-gradle'
        }
        classpath "org.jacoco:org.jacoco.core:$jacocoVersion"
        classpath('net.sf.proguard:proguard-gradle:5.2.1') {
            force = true
        }
        classpath("org.jfrog.buildinfo:build-info-extractor-gradle:4.9.0") {
            exclude group: 'org.codehaus.groovy', module: 'groovy-all'
        }
        if (!project.hasProperty("disable-performance-plugin")) {
            classpath('com.google.firebase:firebase-plugins:1.1.1') {
                exclude group: 'com.google.guava', module: 'guava-jdk5'
            }
        }
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.0"
        classpath "com.google.gms:google-services:4.1.0"
        classpath "io.fabric.tools:gradle:1.26.1"
        classpath "com.vanniktech:gradle-code-quality-tools-plugin:0.17.0"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7"
    }
}

allprojects {
    project.apply from: rootProject.file('buildconfig/dependencies/dependencies.gradle')
    repositories {
        google()
        mavenCentral()
        mavenLocal()
        maven { url "https://maven.google.com" }
        jcenter()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://dl.bintray.com/guardian/android' }
        maven { url 'https://mymavenrepo.com/repo/e01iL1W9Gdxw73PGI9LA' }
        maven {
            url "${artifactory_url}" + "/libs-release-local";
            credentials {
                username = "${artifactory_username}"
                password = "${artifactory_password}"
            }
        }
        maven { url "https://www.jitpack.io" }
        maven { url "$rootDir/node_modules/react-native/android" }
        flatDir {
            dirs '../aars'
            dirs project(rootProject.ext.libraries.inappupdate).file('libs')
        }
        maven { url 'https://hansel.io/maven' }
        maven {
            url "${artifactory_url}" + "/libs-snapshot-local";
            credentials {
                username = "${artifactory_username}"
                password = "${artifactory_password}"
            }
        }
    }
}
apply plugin: 'com.uber.okbuck'

okbuck {

    buildToolVersion = "27.0.3"
    target = "android-28"
    linearAllocHardLimit = [
            customerapp: 10130000,
            sellerapp  : 10130000,
            posapp     : 16000000,
    ]
    extraBuckOpts = [
            'customerappDebug': [
                    "android_binary": ["trim_resource_ids = True"] as Set
            ]
            , 'sellerappDebug': [
            "android_binary": ["trim_resource_ids = True"] as Set
    ]
            , 'posappDebug'   : [
            "android_binary": ["trim_resource_ids = True"] as Set
    ]
    ]

    primaryDexPatterns = [
            'posapp': [
                    '^com/facebook/imagepipeline/memory/PooledByteBuffer^'
            ]
    ]

    intellij {
        sources = true
    }

    lint {
        disabled = true
    }

    wrapper {
        repo = 'https://github.com/facebook/buck.git'
    }

    lint {
        version = "26.0.1"
    }

}

task clean(type: Delete) {
    delete rootProject.buildDir
}


ext {
    artifactoryUrl = "${artifactory_url}"
}

afterEvaluate {
    tasks.withType(PublishToMavenRepository).all { publishTask ->
        publishTask.onlyIf { task ->
            if (project.plugins.hasPlugin('com.android.application')) {
                task.enabled = false
                task.group = null
                return false
            }
            return true
        }
    }
}

subprojects {
    project.configurations.all {
        resolutionStrategy {
            dependencySubstitution {
                substitute module('com.squareup.okhttp3:okhttp') with module(rootProject.ext.networkDependencies.okHttp)
                substitute module('org.jetbrains.kotlin:kotlin-stdlib') with module(rootProject.ext.supportLibDependencies.kotlinSupport)
                substitute module('com.squareup.okio:okio') with module('com.squareup.okio:okio:1.13.0')
                substitute module('com.google.code.findbugs:jsr305') with module('com.google.code.findbugs:jsr305:1.3.9')
                substitute module('com.android.support:support-annotations') with module('com.android.support:support-annotations:27.1.1')
                substitute module('com.android.support:multidex') with module('com.android.support:multidex:1.0.3')
                substitute module('com.android.support:support-v13') with module('com.android.support:support-v13:27.1.1')
                substitute module('com.android.support:support-v4') with module('com.android.support:support-v4:27.1.1')
                substitute module('com.android.support:support-compat') with module('com.android.support:support-compat:27.1.1')
                substitute module('android.arch.core:runtime') with module('android.arch.core:runtime:1.1.1')
                substitute module('android.arch.core:common') with module('android.arch.core:common:1.1.1')
                substitute module('android.arch.lifecycle:runtime') with module('android.arch.lifecycle:runtime:1.1.1')
                substitute module('android.arch.lifecycle:viewmodel') with module('android.arch.lifecycle:viewmodel:1.1.1')
                substitute module('android.arch.lifecycle:livedata-core') with module('android.arch.lifecycle:livedata-core:1.1.1')
                substitute module('org.apache.commons:commons-lang3') with module('org.apache.commons:commons-lang3:3.5')
                substitute module('com.google.android.gms:play-services-base') with module("com.google.android.gms:play-services-base:${playServiceBaseVersion}")
                substitute module('com.google.firebase:firebase-config') with module("com.google.firebase:firebase-config:${playServiceFirebaseConfig}")
                substitute module('com.google.android.gms:play-services-base') with module("com.google.android.gms:play-services-base:${playServiceBaseVersion}")
                substitute module('com.google.firebase:firebase-iid') with module("com.google.firebase:firebase-iid:${playServiceFirebaseIidVersion}")
                substitute module('com.google.android.gms:play-services-measurement-base') with module("com.google.android.gms:play-services-measurement-base:16.0.5")
            }
        }
    }

}


gradle.buildFinished {
    "zip -d .okbuck/cache/org.hamcrest.hamcrest-core-1.3.jar LICENSE.txt".execute()
    "zip -d .okbuck/cache/org.hamcrest.hamcrest-library-1.3.jar LICENSE.txt".execute()
    "zip -d .okbuck/cache/org.hamcrest.hamcrest-integration-1.3.jar LICENSE.txt".execute()
}

