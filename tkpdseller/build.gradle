buildscript {
    repositories {
        mavenCentral()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'android-apt'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

def getArtifactVersionCode() {
    return project.hasProperty('artifactVersion') ? artifactVersion : '1.0';
}

def getTkpdCore() {
    return project.hasProperty('isArtifact') ?
            rootProject.ext.tkpdDependencies.core : project(':tkpdcore');
}

def getTkpdDesign() {
    return project.hasProperty('isArtifact') ?
            rootProject.ext.tkpdDependencies.design : project(':tkpddesign');
}

def getTkpdPayment() {
    return project.hasProperty('isArtifact') ?
            rootProject.ext.tkpdDependencies.payment : project(':tkpdpayment');
}

publishing {
    publications {
        aar(MavenPublication) {
            groupId 'com.tokopedia.seller'
            artifactId 'seller'
            version getArtifactVersionCode()
            artifact("$buildDir/outputs/aar/tkpdseller-release.aar")
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                configurations.compile.allDependencies.each {
                    if (it.group != null && it.name != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

artifactory {
    contextUrl = rootProject.ext.artifactoryUrl
    publish {
        repository {
            repoKey = 'libs-release-local'

            username = artifactory_username
            password = artifactory_password
        }
        defaults {
            publications('aar')
            publishArtifacts = true

            properties = ['qa.level': 'basic', 'q.os': 'android', 'dev.team': 'core']
            publishPom = true
        }
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion "25.0.0"

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        multiDexEnabled = true
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}

apt {
    arguments {
        targetModuleName 'TkpdSeller'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile getTkpdCore()
    compile getTkpdDesign()
    compile getTkpdPayment()
    compile project(':bottomsheetbuilder')

    compile rootProject.ext.permissionDispatcherDependencies.permissionDispatcher
    apt rootProject.ext.permissionDispatcherDependencies.permissionDispatcherProcessor

    compile rootProject.ext.deeplinkDispatchDependencies.deeplinkDispatch
    apt rootProject.ext.deeplinkDispatchDependencies.deeplinkDispatchProcessor
    compile(group: 'com.bottomsheet.builder', name: 'bottomsheet', version: '0.0.1', ext: 'aar')

    compile rootProject.ext.miscDependencies.parcelerApi
    apt rootProject.ext.miscDependencies.parceler

    apt rootProject.ext.dbDependencies.dbFlowProcessor
    compile rootProject.ext.dbDependencies.dbFlowCore
    compile rootProject.ext.dbDependencies.dbFlow

    compile rootProject.ext.miscDependencies.rxJavaComputation
    compile rootProject.ext.miscDependencies.gson
    compile rootProject.ext.miscDependencies.chips
    compile rootProject.ext.miscDependencies.roundCornerProgressBar
    compile rootProject.ext.miscDependencies.loaderviewlibrary

    compile(rootProject.ext.tkpdLibDependencies.expandableOption) {
        exclude group: "com.android.support"
    }

    compile rootProject.ext.miscDependencies.dagger
    apt rootProject.ext.miscDependencies.daggerCompiler

    provided rootProject.ext.miscDependencies.javaxAnnotation
    compile rootProject.ext.miscDependencies.dagger
    apt rootProject.ext.miscDependencies.daggerCompiler

    compile(rootProject.ext.tkpdLibDependencies.showcase) {
        exclude group: "com.android.support"
    }

    androidTestCompile(rootProject.ext.testDependencies.espressoCore, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile rootProject.ext.testDependencies.junit
}