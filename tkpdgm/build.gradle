apply plugin: 'com.android.library'
apply plugin: 'android-apt'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'
apply plugin: 'maven'

group = rootProject.ext.groupModule
version = rootProject.ext.tkpdGmVersion

publishing {
    publications {
        aar(MavenPublication) {
            groupId rootProject.ext.groupModule
            artifactId rootProject.ext.tkpdGmArtifact
            version rootProject.ext.tkpdGmVersion
            artifact("$buildDir/outputs/aar/tkpdgm-release.aar")
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                configurations.compile.allDependencies.each {
                    if (it.group != null && it.name != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}


def getTkpdSeller() {
    return project.hasProperty('isArtifact') ?
            rootProject.ext.tkpdDependencies.seller : project(':tkpdseller');
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        multiDexEnabled = true
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

apt {
    arguments {
        targetModuleName 'TkpdGM'
    }
}


dependencies {
    compile getTkpdSeller()

    compile rootProject.ext.deeplinkDispatchDependencies.deeplinkDispatch
    apt rootProject.ext.deeplinkDispatchDependencies.deeplinkDispatchProcessor

    apt rootProject.ext.dbDependencies.dbFlowProcessor
    compile rootProject.ext.dbDependencies.dbFlowCore
    compile rootProject.ext.dbDependencies.dbFlow

    compile rootProject.ext.miscDependencies.dagger
    apt rootProject.ext.miscDependencies.daggerCompiler

    androidTestCompile(rootProject.ext.testDependencies.espressoCore, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testCompile rootProject.ext.testDependencies.junit
}
