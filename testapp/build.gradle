apply from: "$rootProject.projectDir/buildconfig/kotlin/application-signable.gradle"
apply plugin: 'com.google.firebase.crashlytics'
apply from: "$rootProject.projectDir/buildconfig/kotlin/core-module.gradle"
apply plugin: 'com.google.gms.google-services'
apply from: "$rootDir/buildconfig/aar/local-aar.gradle"
apply plugin: 'io.hansel.preprocessor'
apply plugin: "com.google.devtools.ksp"

buildscript {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://maven-hansel.tokopedia.com/maven' }
    }
    dependencies {
        classpath rootProject.ext.miscDependencies.hansel
    }
}

def isEnableMacrobenchmarkUtil() {
    if (project.hasProperty('enableMacrobenchmarkUtil') ?: "false") {
        return "true";
    }
    return "false";
}

android {
    namespace 'com.tokopedia.tkpd'
    testNamespace 'com.tokopedia.tkpd.test'
    packagingOptions {
        exclude 'META-INF/**'
        pickFirst '**/armeabi-v7a/libc++_shared.so'
        pickFirst '**/x86/libc++_shared.so'
        pickFirst '**/arm64-v8a/libc++_shared.so'
        pickFirst '**/x86_64/libc++_shared.so'
        pickFirst '**/x86/libjsc.so'
        pickFirst '**/armeabi-v7a/libjsc.so'
        pickFirst "**/libc++_shared.so"
    }

    compileSdkVersion rootProject.ext.compileSdkVersion
    useLibrary 'org.apache.http.legacy'
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    signingConfigs {
        debug {
            storeFile file("debug.keystore")
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            zipAlignEnabled false
            testCoverageEnabled false
            buildConfigField "boolean", "ENABLE_DISTRIBUTION", "false"
            buildConfigField "boolean", "ENABLE_MACROBENCHMARK_UTIL", isEnableMacrobenchmarkUtil()
            ext.enableHansel = false
            ext.enableCrashlytics = false
        }
        release {
            minifyEnabled true
            buildConfigField "boolean", "ENABLE_DISTRIBUTION", "false"
            buildConfigField "boolean", "ENABLE_MACROBENCHMARK_UTIL", isEnableMacrobenchmarkUtil()
            signingConfig signingConfigs.debug
        }
    }
    defaultConfig {
        minSdkVersion 21
        multiDexEnabled true
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 391100000
        versionName "3.150"
        vectorDrawables.useSupportLibrary = true
        ndk {
            abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildFeatures {
        buildConfig true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = rootProject.ext.composeVersion
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}
dependencies {
    implementation platform(rootProject.ext.firebase.bom)
    implementation platform(rootProject.ext.networkDependencies.okhttpBom)

    implementation projectOrAar(rootProject.ext.libraries.applink)
    implementation projectOrAar(rootProject.ext.features.sessioncommon)
    implementation projectOrAar(rootProject.ext.libraries.remoteConfig)
    implementation projectOrAar(rootProject.ext.libraries.remoteResourceRequest)
    implementation projectOrAar(rootProject.ext.libraries.keys)
    implementation projectOrAar(rootProject.ext.libraries.linker)
    implementation projectOrAar(rootProject.ext.libraries.interceptors)
    implementation projectOrAar(rootProject.ext.libraries.translator)

    implementation projectOrAar(rootProject.ext.libraries.tkpdabstraction)
    implementation projectOrAar(rootProject.ext.libraries.track)
    implementation projectOrAar(rootProject.ext.libraries.analyticsDebugger)
    implementation projectOrAar(rootProject.ext.libraries.analytics)

    implementation projectOrAar(rootProject.ext.libraries.commonNetwork)
    implementation projectOrAar(rootProject.ext.libraries.graphql)
    implementation projectOrAar(rootProject.ext.libraries.akamaiBotLib)
    implementation projectOrAar(rootProject.ext.libraries.core_legacy)
    implementation projectOrAar(rootProject.ext.libraries.iris)

    implementation rootProject.ext.tkpdInternalLibDependencies.cachemanager
    implementation rootProject.ext.tkpdInternalLibDependencies.cassava

    implementation rootProject.ext.tkpdInternalLibDependencies.url
    implementation projectOrAar(rootProject.ext.libraries.network)
    implementation projectOrAar(rootProject.ext.libraries.usersession)
    implementation rootProject.ext.tkpdInternalLibDependencies.globalconfig
    implementation rootProject.ext.composeDependencies.composeActivity
    implementation rootProject.ext.unifyDependencies.nestComponents
    implementation rootProject.ext.unifyDependencies.principles
    implementation rootProject.ext.unifyDependencies.components
    implementation rootProject.ext.unifyDependencies.icons

    implementation rootProject.ext.msSdkDependencies.msSdk
    implementation rootProject.ext.msSdkDependencies.sdkMonitor
    implementation rootProject.ext.appLogDependencies.baseLibsUtility
    implementation rootProject.ext.ttnetDependencies.baseLibsTtnet
    implementation rootProject.ext.msSdkDependencies.keva
    implementation rootProject.ext.appLogDependencies.encrypt
    implementation rootProject.ext.msSdkDependencies.network
    implementation rootProject.ext.appLogDependencies.businessALog
    implementation rootProject.ext.msSdkDependencies.cronet
    implementation rootProject.ext.msSdkDependencies.networkOk3
    implementation rootProject.ext.msSdkDependencies.librarian
    implementation rootProject.ext.appLogDependencies.androidALog
    implementation rootProject.ext.msSdkDependencies.apmUtil
    implementation rootProject.ext.msSdkDependencies.serviceManager
    implementation rootProject.ext.msSdkDependencies.serviceManagerAnnotation
    implementation rootProject.ext.msSdkDependencies.ssRetrofit2
    implementation rootProject.ext.msSdkDependencies.platformThread
    implementation rootProject.ext.msSdkDependencies.wsChannel
    implementation rootProject.ext.msSdkDependencies.apmApi
    implementation rootProject.ext.appLogDependencies.bdTrackerGlobal

    implementation rootProject.ext.playServicesDependencies.base

    implementation rootProject.ext.firebase.core
    androidTestImplementation(rootProject.ext.testDependencies.espressoContrib, {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    })
    androidTestImplementation rootProject.ext.testDependencies.espressoIntents

    /*
        Do not remove this dependencies, because we use real login usecase
    */
    implementation projectOrAar(rootProject.ext.features.chooseaccount)
    implementation projectOrAar(rootProject.ext.features.verification)
    implementation projectOrAar(rootProject.ext.features.loginregister)
    implementation projectOrAar(rootProject.ext.features.logout)
    implementation projectOrAar(rootProject.ext.libraries.deviceFingerprint)

    /*
        Do not remove this dependency, because we use it for MQTT
     */
    implementation project(rootProject.ext.features.tokochat_config_common)
    /*
        Do not remove this dependency, because we use it for GQL Annotation KSP Processor
     */
    implementation project(rootProject.ext.libraries.gqlKspProcessor)

    //you can delete below line if you are not using developer options, then Build -> Switch to TestApp again
    //you have to DELETE, not only COMMENT, because testapp plugins still add it to compile list even when commented
    //developer_options should not appear in compile-testapp-plugin.gradle if it is successfully excluded
    implementation projectOrAar(rootProject.ext.features.developerOptions)

    //------- DO NOT DELETE THIS PART -------//
    // TO BE ADDED AS FEATURE REQUIREMENT
}