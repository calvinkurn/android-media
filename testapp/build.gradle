apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.crashlytics'
apply from: "$rootProject.projectDir/buildconfig/kotlin/module.gradle"
apply plugin: 'com.google.gms.google-services'
apply from: '../tools/set_debug_tools.gradle'

kapt {
    correctErrorTypes = true
    generateStubs = false
}
def allowDistribution() {
    if (project.hasProperty('tkpdBuildType') && tkpdBuildType == "hockeyapp") {
        return "true";
    }
    return "false";
}
def getTkpdVersionCode() {
    return project.hasProperty('versionCode') ? Integer.parseInt(versionCode) : project.defaultVersionCode;
}
def getTkpdVersionName() {
    return project.hasProperty('versionName') ? versionName : project.defaultVersionName;
}
buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://maven.google.com" }
        mavenCentral()
        jcenter()
    }
    dependencies{
        classpath rootProject.ext.gradlePlugin.crashlytics
        classpath rootProject.ext.gradlePlugin.googleServices
    }
}
android {
    packagingOptions {
        exclude 'META-INF/**'
    }

    project.ext {
        defaultVersionCode = 299900000;
        defaultVersionName = "3.90";
        react = [
                nodeExecutableAndArgs: ["${nodeExecutableAndArgs}"]
        ]
    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    useLibrary 'org.apache.http.legacy'
    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/java']
            aidl.srcDirs = ['src/main/java']
            renderscript.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['assets', 'src/main/assets', 'src/main/assets/']
        }
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    signingConfigs {
        debug {
            storeFile file("debug.keystore")
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            zipAlignEnabled false
            testCoverageEnabled false
            buildConfigField "boolean", "ENABLE_DISTRIBUTION", allowDistribution()
            ext.enableHansel = false
        }
        release {
            signingConfig signingConfigs.debug
        }
    }
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion rootProject.ext.targetSdkVersion
        multiDexEnabled = true
        applicationId "com.tokopedia.tkpd"
        versionCode getTkpdVersionCode()
        versionName getTkpdVersionName()
        vectorDrawables.useSupportLibrary = true
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
dependencies {
    implementation rootProject.ext.miscDependencies.multiDex
    implementation project(rootProject.ext.libraries.applink)
    implementation (project(rootProject.ext.features.sessioncommon))
    implementation (project(rootProject.ext.libraries.remoteConfig))
    implementation (project(rootProject.ext.libraries.remoteResourceRequest))

    implementation project(rootProject.ext.libraries.tkpdabstraction)
    implementation project(rootProject.ext.libraries.track)
    implementation project(rootProject.ext.libraries.analyticsDebugger)

    implementation project(rootProject.ext.libraries.commonNetwork)
    implementation project(rootProject.ext.libraries.graphql)
    implementation project(rootProject.ext.libraries.akamaiBotLib)
    implementation project(rootProject.ext.libraries.core_legacy)
    implementation project(rootProject.ext.libraries.iris)

    implementation rootProject.ext.tkpdInternalLibDependencies.usecase
    implementation rootProject.ext.tkpdInternalLibDependencies.cachemanager
    implementation rootProject.ext.deeplinkDispatchDependencies.deeplinkDispatch
    kapt rootProject.ext.deeplinkDispatchDependencies.deeplinkDispatchProcessor

    implementation rootProject.ext.tkpdInternalLibDependencies.url
    implementation rootProject.ext.tkpdInternalLibDependencies.network
    implementation rootProject.ext.tkpdInternalLibDependencies.authentication
    implementation rootProject.ext.tkpdInternalLibDependencies.usersession
    implementation rootProject.ext.tkpdInternalLibDependencies.globalconfig
    implementation rootProject.ext.tkpdInternalLibDependencies.cacheapi
    implementation rootProject.ext.tkpdInternalLibDependencies.betaNotif
    implementation rootProject.ext.tkpdInternalLibDependencies.akamaiBMP

    if (rootProject.ext.debugToolsEnabled) {
        implementation rootProject.ext.tkpdInternalLibDependencies.fakeresponse
    } else {
        implementation rootProject.ext.tkpdInternalLibDependencies.fakeresponseNoOp
    }

    implementation rootProject.ext.unifyDependencies.components
    implementation rootProject.ext.unifyDependencies.icon
    implementation rootProject.ext.unifyDependencies.principles

    implementation rootProject.ext.playServicesDependencies.base

    implementation rootProject.ext.firebase.core
    implementation rootProject.ext.debugToolsDependencies.chuck
    androidTestImplementation(rootProject.ext.testDependencies.espressoContrib, {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    })
    androidTestImplementation rootProject.ext.testDependencies.espressoIntents

    //you can delete below line if you use old login, then Build -> Switch to TestApp again
    //you have to DELETE, not only COMMENT, because testapp plugins still add it to compile list even when commented
    //logintestapp should not appear in compile-testapp-plugin.gradle if it is successfully excluded
    implementation project(rootProject.ext.features.logintestapp)

    //you can delete below line if you are not using developer options, then Build -> Switch to TestApp again
    //you have to DELETE, not only COMMENT, because testapp plugins still add it to compile list even when commented
    //developer_options should not appear in compile-testapp-plugin.gradle if it is successfully excluded
    implementation project(rootProject.ext.features.developerOptions)

    //------- DO NOT DELETE THIS PART -------//
    // TO BE ADDED AS FEATURE REQUIREMENT
}
