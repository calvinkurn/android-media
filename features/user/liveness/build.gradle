apply plugin: 'com.android.library'
apply from: "$rootProject.projectDir/buildconfig/kotlin/core-kapt.gradle"
apply plugin: 'io.hansel.preprocessor.module'
apply from: "../../../compile-unit-test.gradle"
apply from: "../../../compile-instrument-test.gradle"

repositories {
    maven { url 'https://maven-hansel.tokopedia.com/maven' }
    mavenCentral()
}

buildscript {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://maven-hansel.tokopedia.com/maven' }
    }
    dependencies {
        classpath rootProject.ext.miscDependencies.hansel
    }
}

android {
    namespace 'com.tokopedia.liveness'
    testNamespace 'com.tokopedia.liveness.test'
    sourceSets.each {
        it.java.srcDirs += "src/$it.name/kotlin"
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation projectOrAar(rootProject.ext.features.resourcesCommon)
    implementation projectOrAar(rootProject.ext.libraries.imageAssets)
    implementation projectOrAar(rootProject.ext.features.medialoader)

    implementation projectOrAar(rootProject.ext.libraries.applink)
    implementation projectOrAar(rootProject.ext.libraries.tkpdabstraction)
    implementation projectOrAar(rootProject.ext.libraries.track)
    implementation projectOrAar(rootProject.ext.libraries.utils)
    implementation projectOrAar(rootProject.ext.libraries.logger)
    implementation projectOrAar(rootProject.ext.libraries.remoteConfig)

    implementation rootProject.ext.unifyDependencies.header
    implementation rootProject.ext.unifyDependencies.principles
    implementation rootProject.ext.unifyDependencies.components
    implementation rootProject.ext.unifyDependencies.loader_dialog
    implementation rootProject.ext.unifyDependencies.icons
    implementation rootProject.ext.unifyDependencies.global_error
    implementation rootProject.ext.unifyDependencies.dialog
    implementation rootProject.ext.unifyDependencies.icon

    implementation projectOrAar(rootProject.ext.libraries.network)
    implementation projectOrAar(rootProject.ext.libraries.usersession)

    implementation rootProject.ext.tkpdInternalLibDependencies.usecase

    implementation rootProject.ext.supportLibDependencies.constraintLayout
    implementation rootProject.ext.supportLibDependencies.kotlinSupportJdk7
    implementation rootProject.ext.playServicesDependencies.core

    implementation rootProject.ext.miscDependencies.roundCornerProgressBar
    implementation rootProject.ext.miscDependencies.coroutineCore
    implementation rootProject.ext.miscDependencies.dagger
    implementation rootProject.ext.miscDependencies.lottie
    kapt rootProject.ext.miscDependencies.daggerCompiler
    implementation rootProject.ext.miscDependencies.lifeCycleExtentions
    implementation rootProject.ext.miscDependencies.multiDex

    // Liveness SDK
    api rootProject.ext.miscDependencies.livenessDetection
    api rootProject.ext.miscDependencies.livenessCore

    testImplementation rootProject.ext.testDependencies.kotlinTest
    testImplementation rootProject.ext.testDependencies.mockk
    testImplementation rootProject.ext.testDependencies.mockkAndroid
    testImplementation rootProject.ext.testDependencies.archCoreTesting
    testImplementation rootProject.ext.testDependencies.espressoCore
    testImplementation rootProject.ext.testDependencies.espressoContrib
    testImplementation projectOrAar(rootProject.ext.libraries.instrumentation_test)

    if (rootProject.ext.debugToolsEnabled) {
        implementation projectOrAar(rootProject.ext.libraries.analyticsDebugger)
    } else {
        implementation projectOrAar(rootProject.ext.libraries.analyticsDebuggerNoop)
    }
}

project.ext {
    artifactId = 'liveness'
    groupId = 'com.tokopedia.user'
    versionName = "0.0.2"
    artifactName = "liveness-release"
}

apply from: '../../../publish_local.gradle'
apply from: '../../../jacoco_task.gradle'
apply from: '../../../sonar_config.gradle'