apply plugin: 'com.android.library'
apply from: "$rootProject.projectDir/buildconfig/kotlin/module.gradle"
apply plugin: 'io.hansel.preprocessor.module'
apply from: "../../../compile-instrument-test.gradle"

repositories {
    maven { url 'https://maven-hansel.tokopedia.com/maven' }
    mavenCentral()
}

buildscript {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://maven-hansel.tokopedia.com/maven' }
    }
    
    dependencies {
        classpath rootProject.ext.miscDependencies.hansel
    }
}

android {
    packagingOptions {
        exclude 'META-INF/**'
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    defaultConfig {
        multiDexEnabled true
    }

    defaultConfig {
        if (project.hasProperty("benchmark")) {
            testInstrumentationRunner 'com.tokopedia.test.application.environment.TkpdAndroidBenchmarkTestRunner'
        } else {
            testInstrumentationRunner "com.tokopedia.test.application.environment.InstrumentationTestRunner"
        }
    }

    buildFeatures {
        viewBinding true
    }

    testOptions {
        animationsDisabled = true
    }
}

dependencies {

    implementation projectOrAar(rootProject.ext.features.productCard)

    implementation projectOrAar(rootProject.ext.features.autocompleteComponent)
    implementation projectOrAar(rootProject.ext.features.createpostCommon)
    implementation projectOrAar(rootProject.ext.features.discoveryCommon)
    implementation projectOrAar(rootProject.ext.features.filter)
    implementation projectOrAar(rootProject.ext.features.resourcesCommon)
    implementation projectOrAar(rootProject.ext.features.topAdsSdk)
    implementation projectOrAar(rootProject.ext.features.medialoader)
    implementation projectOrAar(rootProject.ext.features.feedComponent)

    implementation projectOrAar(rootProject.ext.libraries.analytics)
    implementation projectOrAar(rootProject.ext.libraries.applink)
    implementation projectOrAar(rootProject.ext.libraries.adapterDelegate)
    implementation projectOrAar(rootProject.ext.libraries.kotlinExtensions)
    implementation projectOrAar(rootProject.ext.libraries.iris)
    implementation projectOrAar(rootProject.ext.libraries.tkpdabstraction)
    implementation projectOrAar(rootProject.ext.libraries.usersession)
    implementation projectOrAar(rootProject.ext.libraries.track)
    implementation projectOrAar(rootProject.ext.libraries.trackingOptimizer)
    implementation projectOrAar(rootProject.ext.libraries.graphql)
    implementation projectOrAar(rootProject.ext.libraries.network)
    implementation projectOrAar(rootProject.ext.libraries.utils)

    implementation rootProject.ext.unifyDependencies.components
    implementation rootProject.ext.unifyDependencies.empty_state
    implementation rootProject.ext.unifyDependencies.coach_mark
    implementation rootProject.ext.unifyDependencies.principles
    implementation rootProject.ext.unifyDependencies.icons
    implementation rootProject.ext.unifyDependencies.global_error
    implementation rootProject.ext.unifyDependencies.sortFilter
    implementation rootProject.ext.miscDependencies.coroutineCore
    implementation rootProject.ext.miscDependencies.coroutineAndroid
    implementation rootProject.ext.miscDependencies.lifecycleRuntimeKtx
    implementation rootProject.ext.miscDependencies.lifeCycleExtentions
    implementation rootProject.ext.miscDependencies.viewModel
    implementation rootProject.ext.miscDependencies.viewModelKtx
    implementation rootProject.ext.miscDependencies.dagger
    implementation rootProject.ext.miscDependencies.fragmentKtx
    kapt rootProject.ext.miscDependencies.daggerCompiler
    implementation rootProject.ext.debugToolsDependencies.chuck
    implementation rootProject.ext.supportLibDependencies.constraintLayout
    implementation rootProject.ext.tkpdInternalLibDependencies.usecase
    implementation rootProject.ext.tkpdInternalLibDependencies.gqlquery_annotation
    kapt rootProject.ext.tkpdInternalLibDependencies.gqlquery_annotation_processor

    implementation rootProject.ext.networkDependencies.glide

    implementation (rootProject.ext.firebase.crashlytics) {
        transitive = true
    }

    testImplementation rootProject.ext.testDependencies.mockk
    testImplementation rootProject.ext.testDependencies.assertJCore
    testImplementation rootProject.ext.miscDependencies.coroutineTest
    testImplementation rootProject.ext.testDependencies.archCoreTesting
    testImplementation rootProject.ext.testDependencies.junitJupiterApi
    testImplementation rootProject.ext.testDependencies.junitPlatformRunner
    testImplementation projectOrAar(rootProject.ext.libraries.unitTest)
    testRuntimeOnly rootProject.ext.testDependencies.junitJupiterEngine

    androidTestImplementation rootProject.ext.testDependencies.assertJCore
    androidTestImplementation rootProject.ext.miscDependencies.coroutineTest
    androidTestImplementation rootProject.ext.testDependencies.mockkAndroid
    androidTestImplementation rootProject.ext.testDependencies.archCoreTesting
    androidTestImplementation rootProject.ext.testDependencies.espressoContrib
    androidTestImplementation rootProject.ext.testDependencies.espressoCore
    androidTestImplementation rootProject.ext.testDependencies.espressoIntents
    androidTestImplementation rootProject.ext.testDependencies.androidxTest

    androidTestImplementation projectOrAar(rootProject.ext.libraries.instrumentation_test)
    androidTestImplementation rootProject.ext.tkpdInternalLibDependencies.cassavaTest
    androidTestImplementation projectOrAar(rootProject.ext.features.contentTest)

    androidTestImplementation rootProject.ext.miscDependencies.dagger
    kaptAndroidTest rootProject.ext.miscDependencies.daggerCompiler

    androidTestImplementation rootProject.ext.unifyDependencies.sortFilter
    androidTestImplementation projectOrAar(rootProject.ext.features.filter)
}

project.ext {
    artifactId = 'content-component'
    groupId = 'com.tokopedia.content'
    versionName = "0.0.1"
    artifactName ="content_component-release"
}

apply from: '../../../publish_local.gradle'
apply from: '../../../jacoco_task.gradle'
apply from: '../../../sonar_config.gradle'