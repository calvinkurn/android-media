package com.tokopedia.play.broadcaster.ui.viewholder.setup

import android.view.LayoutInflater
import android.view.ViewGroup
import androidx.recyclerview.widget.RecyclerView
import com.bumptech.glide.Glide
import com.bumptech.glide.load.model.GlideUrl
import com.bumptech.glide.load.model.LazyHeaders
import com.tokopedia.play.broadcaster.databinding.ItemSetupCoverAutoGeneratedBinding
import com.tokopedia.play.broadcaster.ui.model.setup.AutoGeneratedCoverUIModel
import com.tokopedia.play.broadcaster.view.adapter.PlayAutoGeneratedCoverAdapter

/**
 * Created by fachrizalmrsln on 16/01/23
 */
class PlayAutoGeneratedCoverViewHolder(
    private val userAccessToken: String,
    private val listener: PlayAutoGeneratedCoverAdapter.Listener,
    private val binding: ItemSetupCoverAutoGeneratedBinding,
) : RecyclerView.ViewHolder(binding.root) {

    fun bind(data: AutoGeneratedCoverUIModel) {
        setItemChecked(data.isChecked)
        loadCoverImage(data)

        binding.root.setOnClickListener {
            if (binding.rbSelectedAutoGeneratedCover.isChecked) return@setOnClickListener
            listener.onClickItem(data, bindingAdapterPosition)
        }
    }

    private fun setItemChecked(checked: Boolean) = with(binding.rbSelectedAutoGeneratedCover) {
        isChecked = checked
    }

    private fun loadCoverImage(data: AutoGeneratedCoverUIModel) {
        val glideUrl = GlideUrl(
            data.imageUrl,
            LazyHeaders.Builder()
                .addHeader(AUTHORIZATION, "$BEARER $userAccessToken")
                .build()
        )
        Glide.with(binding.root.context)
            .load(glideUrl)
            .into(binding.ivCover)
    }

    companion object {
        private const val AUTHORIZATION = "Authorization"
        private const val BEARER = "Bearer"
        fun create(userAccessToken: String, listener: PlayAutoGeneratedCoverAdapter.Listener, parent: ViewGroup) = PlayAutoGeneratedCoverViewHolder(
            userAccessToken,
            listener,
            ItemSetupCoverAutoGeneratedBinding.inflate(
                LayoutInflater.from(parent.context),
                parent,
                false,
            ),
        )
    }

}
