package com.tokopedia.play.broadcaster.ui.viewholder.setup

import android.view.LayoutInflater
import android.view.ViewGroup
import androidx.recyclerview.widget.RecyclerView
import com.tokopedia.play.broadcaster.databinding.ItemSetupCoverAutoGeneratedBinding
import com.tokopedia.play.broadcaster.ui.model.setup.AutoGeneratedCoverUIModel
import com.tokopedia.play.broadcaster.util.extension.loadImageFromUrl
import com.tokopedia.play.broadcaster.view.adapter.PlayAutoGeneratedCoverAdapter

/**
 * Created by fachrizalmrsln on 16/01/23
 */
class PlayAutoGeneratedCoverViewHolder(
    private val userAccessToken: String,
    private val listener: PlayAutoGeneratedCoverAdapter.Listener,
    private val binding: ItemSetupCoverAutoGeneratedBinding,
) : RecyclerView.ViewHolder(binding.root) {

    fun bind(data: AutoGeneratedCoverUIModel) {
        setItemChecked(data.isChecked)
        loadCoverImage(data)

        binding.tvChannelTitle.text = data.channelTitle
        binding.tvAuthorName.text = data.channelAuthor
        binding.root.setOnClickListener {
            if (binding.rbSelectedAutoGeneratedCover.isChecked) return@setOnClickListener
            listener.onClickItem(bindingAdapterPosition)
        }
    }

    private fun setItemChecked(checked: Boolean) = with(binding.rbSelectedAutoGeneratedCover) {
        isChecked = checked
    }

    private fun loadCoverImage(data: AutoGeneratedCoverUIModel) {
        binding.ivCover.loadImageFromUrl(
            token = userAccessToken,
            url = data.imageUrl,
            onError = {
                listener.onFailLoadResources(it)
            }
        )
    }

    companion object {
        fun create(userAccessToken: String, listener: PlayAutoGeneratedCoverAdapter.Listener, parent: ViewGroup) = PlayAutoGeneratedCoverViewHolder(
            userAccessToken,
            listener,
            ItemSetupCoverAutoGeneratedBinding.inflate(
                LayoutInflater.from(parent.context),
                parent,
                false,
            ),
        )
    }

}
