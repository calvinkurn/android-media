buildscript {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://maven-hansel.tokopedia.com/maven' }
    }
    dependencies {
        classpath rootProject.ext.miscDependencies.hansel
    }
}

plugins {
    id 'com.android.library'
    id 'com.google.protobuf'  version "0.9.3"
}

apply plugin: 'io.hansel.preprocessor.module'
apply from: "$rootProject.projectDir/buildconfig/kotlin/module.gradle"

repositories {
    maven { url 'https://maven-hansel.tokopedia.com/maven' }
    mavenCentral()
}


android {
    namespace 'com.tokopedia.developer_options'
    testNamespace 'com.tokopedia.developer_options.test'

    sourceSets.each {
        it.java.srcDirs += "$buildDir/generated/source/proto/debug/main/java"
        it.kotlin.srcDirs +=  "$buildDir/generated/source/proto/debug/main/java"
    }
}

dependencies {
    implementation projectOrAar(rootProject.ext.features.pushNotificationCommon)
    implementation projectOrAar(rootProject.ext.features.resourcesCommon)
    implementation projectOrAar(rootProject.ext.features.productDetailCommon)

    implementation projectOrAar(rootProject.ext.features.fcm_common)
    implementation projectOrAar(rootProject.ext.libraries.tkpdabstraction)
    implementation projectOrAar(rootProject.ext.libraries.baseList)
    implementation projectOrAar(rootProject.ext.libraries.applink)
    implementation projectOrAar(rootProject.ext.libraries.remoteConfig)
    implementation projectOrAar(rootProject.ext.libraries.analytics)
    implementation projectOrAar(rootProject.ext.libraries.logger)
    implementation projectOrAar(rootProject.ext.libraries.keys)
    implementation projectOrAar(rootProject.ext.libraries.screenRecorder)
    implementation projectOrAar(rootProject.ext.libraries.deviceFingerprint)
    implementation projectOrAar(rootProject.ext.libraries.encryption)

    implementation projectOrAar(rootProject.ext.libraries.analyticsDebugger)
    implementation projectOrAar(rootProject.ext.libraries.journeyDebugger)
    implementation projectOrAar(rootProject.ext.libraries.dataExplorer)
    implementation projectOrAar(rootProject.ext.libraries.pushNotification)
    implementation projectOrAar(rootProject.ext.libraries.utils)
    implementation projectOrAar(rootProject.ext.libraries.loginHelper)
    implementation projectOrAar(rootProject.ext.libraries.network)

    implementation rootProject.ext.unifyDependencies.principles
    implementation rootProject.ext.unifyDependencies.components
    implementation rootProject.ext.unifyDependencies.icons
    implementation rootProject.ext.unifyDependencies.global_error
    implementation rootProject.ext.unifyDependencies.coach_mark
    implementation rootProject.ext.tkpdInternalLibDependencies.url
    implementation rootProject.ext.tkpdInternalLibDependencies.globalconfig
    implementation rootProject.ext.tkpdInternalLibDependencies.usecase
    implementation rootProject.ext.tkpdInternalLibDependencies.cassava
    implementation projectOrAar(rootProject.ext.libraries.usersession)

    implementation rootProject.ext.miscDependencies.lifeCycleExtentions
    kapt rootProject.ext.miscDependencies.lifeCycleRuntime
    implementation rootProject.ext.supportLibDependencies.constraintLayout
    implementation rootProject.ext.miscDependencies.roundCornerProgressBar
    implementation rootProject.ext.debugToolsDependencies.chuck
    implementation rootProject.ext.playServicesDependencies.maps
    implementation rootProject.ext.miscDependencies.influxInteractor

    implementation rootProject.ext.firebase.messaging
    
    implementation projectOrAar(rootProject.ext.libraries.translator)
    implementation rootProject.ext.debugToolsDependencies.stetho

    implementation rootProject.ext.miscDependencies.dagger
    kapt rootProject.ext.miscDependencies.daggerCompiler

    implementation(rootProject.ext.debugToolsDependencies.timber) {
        exclude group: 'org.jetbrains', module: 'annotations'
    }
    implementation (rootProject.ext.firebase.crashlytics) {
        transitive = true
    }

    implementation 'com.ss.android.larksso:larksso:1.1.5'
    implementation rootProject.ext.appLogDependencies.bdTrackerGlobal

    implementation rootProject.ext.msSdkDependencies.msSdk
    implementation rootProject.ext.msSdkDependencies.sdkMonitor
    implementation rootProject.ext.appLogDependencies.baseLibsUtility
    implementation rootProject.ext.ttnetDependencies.baseLibsTtnet
    implementation rootProject.ext.msSdkDependencies.keva
    implementation rootProject.ext.appLogDependencies.encrypt
    implementation rootProject.ext.msSdkDependencies.network
    implementation rootProject.ext.appLogDependencies.businessALog
    implementation rootProject.ext.msSdkDependencies.cronet
    implementation rootProject.ext.msSdkDependencies.networkOk3
    implementation rootProject.ext.msSdkDependencies.librarian
    implementation rootProject.ext.appLogDependencies.androidALog
    implementation rootProject.ext.msSdkDependencies.apmUtil
    implementation rootProject.ext.msSdkDependencies.serviceManager
    implementation rootProject.ext.msSdkDependencies.serviceManagerAnnotation
    implementation rootProject.ext.msSdkDependencies.ssRetrofit2
    implementation rootProject.ext.msSdkDependencies.platformThread
    implementation rootProject.ext.msSdkDependencies.wsChannel
    implementation rootProject.ext.msSdkDependencies.apmApi
    implementation rootProject.ext.appLogDependencies.bdTrackerGlobal

    implementation rootProject.ext.miscDependencies.protobufLite
    implementation rootProject.ext.miscDependencies.dataStore

}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.19.1"
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

// https://youtrack.jetbrains.com/issue/KT-52761/Kotlin-170-breaks-kapt-processing-for-protobuf-generated-java-sources
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KaptGenerateStubs).configureEach {
    kotlinOptions.jvmTarget = '17'
    source("$buildDir/generated/source/proto/debug/main/java")
    source("$buildDir/generated/source/proto/release/main/java")
    source("$buildDir/generated/source/proto/debug/java")
    source("$buildDir/generated/source/proto/release/java")
}

tasks.withType(org.jetbrains.kotlin.gradle.internal.KaptWithoutKotlincTask$KaptExecutionWorkAction).configureEach {
    kotlinOptions.jvmTarget = '17'
    source("$buildDir/generated/source/proto/debug/main/java")
    source("$buildDir/generated/source/proto/release/main/java")
    source("$buildDir/generated/source/proto/debug/java")
    source("$buildDir/generated/source/proto/release/java")
}

project.ext {
    artifactId = 'developer-options'
    groupId = 'com.tokopedia.common'
    versionName = "0.0.2"
    artifactName ="developer_options-release"
}

apply from: '../../../publish_local.gradle'