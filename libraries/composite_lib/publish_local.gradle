apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'
apply plugin: 'maven'

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if(project.plugins.findPlugin("android-library")) {
        from android.sourceSets.main.java.srcDirs
    } else {
        from sourceSets.main.java.srcDirs
    }
}

publishing {
    publications {
        aar(MavenPublication) {
            groupId project.groupId
            artifactId project.artifactId
            version project.versionName
            if(project.plugins.findPlugin("android-library")) {
                artifact("$buildDir/outputs/aar/"+project.artifactName+".aar")
            } else{
                artifact("$buildDir/libs/"+project.artifactName+".jar")
            }
            artifact sourcesJar
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    if (it.group != null && it.name != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

artifactory {
    contextUrl = rootProject.ext.gcp_artifactory_url
    publish {
        repository {
            repoKey = 'libs-release-local'

            username = gcp_artifactory_username
            password = gcp_artifactory_password
        }
        defaults {
            publications('aar')
            publishArtifacts = true

            properties = ['qa.level': 'basic', 'q.os': 'android', 'dev.team': 'core']
            publishPom = true
        }
    }
}
