apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'io.fabric'

def getDpiId(String density) {

    def DPI_ID = ['null': 0, 'mdpi': 1, 'hdpi': 2, 'xhdpi': 3, 'xxhdpi': 4]
    if (density != null)
        return DPI_ID.get(density);
    return 0;
}

def getAPKArchiveFolder(variant) {
    return "/Android/launching-android/" + "V" + variant.mergedFlavor.versionCode;
}

def allowSplit() {
    return !project.hasProperty('tkpdBuildType');
}

def allowDistribution() {
    if ( project.hasProperty('tkpdBuildType') && tkpdBuildType == "hockeyapp") {
        return "true";
    }
    return "false";
}

def getTkpdVersionCode() {
    return project.hasProperty('versionCode') ? Integer.parseInt(versionCode) : project.defaultVersionCode;
}

def getTkpdVersionName() {
    return project.hasProperty('versionName') ? versionName : project.defaultVersionName;
}

def renameAPKFile(variant, density, versionCode) {

    def fileName = variant.name.toUpperCase()
    fileName += "-" + variant.mergedFlavor.versionName;
    fileName += "-V" + versionCode;
    fileName += "-" + density;
    fileName += ".apk";
    return fileName;
}

def archiveAPK(variant, output) {

    String density = output.getFilter(com.android.build.OutputFile.DENSITY);
    def originZipAlignedApkFile = output.outputFile;
    def renameAPKFile = renameAPKFile(variant, density, output.versionCodeOverride);
    copy {
        from "$originZipAlignedApkFile"
        into getAPKArchiveFolder(variant)
        rename("$originZipAlignedApkFile.name", "$renameAPKFile")
    }
}

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}


android {

    project.ext {
        defaultVersionCode = 1000404;
        defaultVersionName = "1.0.4";
    }

    compileSdkVersion 23
    buildToolsVersion '25'
    useLibrary 'org.apache.http.legacy'
    sourceSets {

        packagingOptions {
            exclude 'META-INF/LICENSE.txt'
        }

        main {
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/java']
            aidl.srcDirs = ['src/main/java']
            renderscript.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            zipAlignEnabled false
            buildConfigField "boolean", "ENABLE_DISTRIBUTION", allowDistribution()
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            buildConfigField "boolean", "ENABLE_DISTRIBUTION", allowDistribution()
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            ext.betaDistributionReleaseNotesFilePath = 'release_notes.txt'
            ext.betaDistributionGroupAliasesFilePath = 'group_beta.txt'
            if (allowSplit()) {
                applicationVariants.all { variant ->
                    variant.outputs.each { output ->
                        String density = output.getFilter(com.android.build.OutputFile.DENSITY);
                        output.versionCodeOverride = (getTkpdVersionCode() * 100) + getDpiId(density);
                    }
                    variant.assemble.doLast {
                        variant.outputs.each { output ->
                            if (output.zipAlign) {
                                archiveAPK(variant, output);
                            }
                        }
                    }
                }
            } else {
                applicationVariants.all { variant ->
                    variant.outputs.each { output ->
                        output.versionCodeOverride = (getTkpdVersionCode() * 100);
                    }
                }
            }
        }
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 24
        multiDexEnabled = true
        applicationId "com.tokopedia.sellerapp"
        resConfigs "en", "id"
        versionCode getTkpdVersionCode()
        versionName getTkpdVersionName()
    }


    dexOptions {
        javaMaxHeapSize "4g"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
    }
    splits {
        density {
            enable allowSplit()
            exclude "tvdpi", "xxxhdpi", "ldpi" //Add or modify the supported density here`
            compatibleScreens 'small', 'normal', 'large', 'xlarge' //Discouraged to touch this
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':tkpdinbox')
    compile project(':tkpddiscovery')
    //    compile project(':tkpdtransaction')
    compile project(':tkpdseller')
    compile project(':tkpdsession')
    compile('de.hdodenhof:circleimageview:2.1.0') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    compile('me.henrytao:smooth-app-bar-layout:24.1.1.0') {
        exclude group: "com.android.support"
    }
    compile 'com.daimajia.numberprogressbar:library:1.2@aar'
    compile 'com.jakewharton:butterknife:8.4.0'
    apt 'com.jakewharton:butterknife-compiler:8.4.0'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:multidex:1.0.1'
}
