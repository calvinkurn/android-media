apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'io.hansel.preprocessor'
apply plugin: 'com.bugsnag.android.gradle'

apply from: '../tools/dynamic_feature_inclusion.gradle'
apply from: '../tools/set_debug_tools.gradle'

def allowDistribution() {
    if (project.hasProperty('tkpdBuildType') && tkpdBuildType == "hockeyapp") {
        return "true";
    }
    return "false";
}

def allowProguard() {
    return project.hasProperty('tkpdBuildType')
}

def getTkpdVersionCode() {
    return project.hasProperty('versionCode') ? Integer.parseInt(versionCode) : project.defaultVersionCode;
}

def getTkpdVersionName() {
    return project.hasProperty('versionName') ? versionName : project.defaultVersionName;
}

def devMode() {
    return !project.hasProperty('tkpdBuildType')
}

buildscript {
    repositories {
        mavenCentral()
        google()
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://hansel.io/maven' }
    }
    dependencies {
        classpath rootProject.ext.gradlePlugin.crashlytics
        classpath rootProject.ext.miscDependencies.hansel
        classpath rootProject.ext.gradlePlugin.googleServices
    }
}

android {

    project.ext {
        defaultVersionCode = 200000123;
        defaultVersionName = "2.00.123";
    }

    packagingOptions {
        exclude 'META-INF/**'
    }

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    useLibrary 'org.apache.http.legacy'
    sourceSets {

        main {
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/java']
            aidl.srcDirs = ['src/main/java']
            renderscript.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['assets', 'src/main/assets', 'src/main/assets/']
        }

        androidTest.setRoot('tests')
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
        }
    }


    buildTypes {
        debug {
            defaultConfig.minSdkVersion project.property("minSdkVersionDebug")
            signingConfig signingConfigs.debug
            minifyEnabled false
            zipAlignEnabled false
            buildConfigField "boolean", "ENABLE_DISTRIBUTION", allowDistribution()
            proguardFiles 'proguard-rules.txt'
            ext.enableHansel = project.hasProperty('hanselEnableDebug')
            ext.enableBugsnag = false
        }
        release {
            if (devMode()) {
                signingConfig signingConfigs.debug
            }
            debuggable = isDebugable(project).toBoolean()
            ext.enableHansel = !project.hasProperty('hanselDisableRelease')
            minifyEnabled true
            zipAlignEnabled true
//            shrinkResources true
            buildConfigField "boolean", "ENABLE_DISTRIBUTION", allowDistribution()
            if (allowProguard()) {
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            } else {
                proguardFiles 'proguard-rules.txt'
            }
            ext.betaDistributionReleaseNotesFilePath = 'release_notes.txt'
            ext.betaDistributionGroupAliasesFilePath = 'group_beta.txt'
        }
    }

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        multiDexEnabled = true
        applicationId "com.tokopedia.sellerapp"
        versionCode getTkpdVersionCode()
        versionName getTkpdVersionName()
        resConfigs "en", "id"
        ndk {
            abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }


    dexOptions {
        javaMaxHeapSize "8g"
        keepRuntimeAnnotatedClasses false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    configurations.all {
        resolutionStrategy.force 'androidx.multidex:multidex:2.0.0'
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
        resolutionStrategy.force 'com.squareup.okio:okio:2.2.2'
    }

    // Specifies 4 flavor dimensions.
    flavorDimensions "tier", "client"

    productFlavors {
        staging {
            dimension "tier"
        }
        live {
            dimension "tier"
        }
        dev {
            dimension "client"
        }
        prod {
            dimension "client"
        }
    }
    // put Dynamic Feature Modules in dynamic-feature-sellerapp.cfg
    // to disable dynamic feature, use command option -Pdisable-dynamic-feature
    dynamicFeatures = getDynamicFeatureIfEnabled(project)
    generateAssetFile(project, dynamicFeatures)
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation project(rootProject.ext.libraries.pushNotification)
    implementation project(rootProject.ext.libraries.applink)
    implementation project(rootProject.ext.libraries.tkpdabstraction)
    implementation project(rootProject.ext.libraries.baseList)
    implementation project(rootProject.ext.libraries.tkpddesign)
    implementation project(rootProject.ext.libraries.webview)
    implementation project(rootProject.ext.libraries.datePickerRange)
    implementation project(rootProject.ext.libraries.remoteConfig)
    implementation project(rootProject.ext.libraries.baseListSeller)
    implementation project(rootProject.ext.libraries.kotlinExtensions)
    implementation project(rootProject.ext.libraries.core_legacy)
    implementation project(rootProject.ext.libraries.trackingOptimizer)
    implementation project(rootProject.ext.libraries.coreNetwork)
    implementation project(rootProject.ext.libraries.commonNetwork)
    implementation project(rootProject.ext.libraries.iris)
    implementation project(rootProject.ext.libraries.irisSession)
    implementation project(rootProject.ext.libraries.dynamicFeatures)
    implementation project(rootProject.ext.libraries.track)
    implementation project(rootProject.ext.libraries.deviceInfo)
    implementation project(rootProject.ext.features.createpost)
    implementation project(rootProject.ext.features.developerOptions)
    implementation project(rootProject.ext.features.commonDigital)
    implementation project(rootProject.ext.features.tkpdcore)
    implementation project(rootProject.ext.features.shopPage)
    implementation project(rootProject.ext.features.sellerorder)
    implementation project(rootProject.ext.features.sellerHome)
    implementation project(rootProject.ext.features.sellerOnboarding)
    implementation project(rootProject.ext.features.merchantLendingWidget)
    implementation project(rootProject.ext.features.goldMerchantCommon)
    implementation project(rootProject.ext.features.powerMerchantSubscribe)
    implementation project(rootProject.ext.features.goldMerchantResource)
    implementation project(rootProject.ext.features.goldMerchant)
    implementation project(rootProject.ext.features.topAdsDashboard)
    implementation project(rootProject.ext.features.topAdsWidget)
    implementation project(rootProject.ext.features.topAdsManagementCommon)
    implementation project(rootProject.ext.features.topAdsManagement)
    implementation project(rootProject.ext.features.report)
    implementation project(rootProject.ext.features.topAdsAutoAds)
    implementation project(rootProject.ext.features.topAdsCreate)
    implementation project(rootProject.ext.features.tkpdseller)
    implementation project(rootProject.ext.features.tkpdsession)
    implementation project(rootProject.ext.features.reputation)
    implementation project(rootProject.ext.features.reputationCommon)
    implementation project(rootProject.ext.features.reviewSeller)
    implementation project(rootProject.ext.features.sellerActiveCommon)
    implementation project(rootProject.ext.features.topAdsSdk)
    implementation project(rootProject.ext.features.payment)
    implementation project(rootProject.ext.features.commonPayment)
    implementation project(rootProject.ext.features.profile)
    implementation project(rootProject.ext.features.contactUs)
    implementation project(rootProject.ext.features.otp)
    implementation project(rootProject.ext.features.logout)
    implementation project(rootProject.ext.features.userIdentification)
    implementation project(rootProject.ext.features.userIdentificationCommon)
    implementation project(rootProject.ext.features.logisticaddaddress)
    implementation project(rootProject.ext.features.saldodetails)
    implementation project(rootProject.ext.features.homecredit)
    implementation project(rootProject.ext.features.developerOptions)
    implementation project(rootProject.ext.libraries.imageuploader)
    implementation project(rootProject.ext.libraries.imagePicker)
    implementation project(rootProject.ext.libraries.linker)
    implementation project(rootProject.ext.features.logisticaddaddress)
    implementation project(rootProject.ext.features.logisticdata)
    implementation project(rootProject.ext.features.logisticorder)
    implementation project(rootProject.ext.features.topchat)
    implementation project(rootProject.ext.features.chatbot)
    implementation project(rootProject.ext.features.chatcommon)
    implementation project(rootProject.ext.features.attachproduct)
    implementation project(rootProject.ext.features.talk)
    implementation project(rootProject.ext.features.productDetail)
    implementation project(rootProject.ext.features.productAddEdit)
    implementation project(rootProject.ext.features.productManageItem)
    implementation project(rootProject.ext.features.productManageList)
    implementation project(rootProject.ext.features.kol)
    implementation project(rootProject.ext.features.kolCommon)
    implementation project(rootProject.ext.features.flashsaleManagement)
    implementation project(rootProject.ext.features.flashsaleManagementCommon)
    implementation project(rootProject.ext.features.merchantVoucher)
    implementation project(rootProject.ext.features.categoryCommon)
    implementation project(rootProject.ext.features.opportunity)
    implementation project(rootProject.ext.features.notifCenter)
    implementation project(rootProject.ext.features.settingbank)
    implementation project(rootProject.ext.features.changepassword)
    implementation project(rootProject.ext.features.voucherCreation)
    implementation project(rootProject.ext.features.shopCommon)
    implementation project(rootProject.ext.features.shopScore)
    implementation project(rootProject.ext.features.commonDigital)
    implementation project(rootProject.ext.features.digitalproduct)
    implementation project(rootProject.ext.features.shopOpen)
//    implementation project(rootProject.ext.features.shopShowcase)
    implementation project(rootProject.ext.features.withdraw)

    implementation project(rootProject.ext.features.changePhoneNumber)
    implementation project(rootProject.ext.features.phoneVerification)
    implementation project(rootProject.ext.features.updateinactivephone)
    implementation project(rootProject.ext.features.loginregister)
    implementation project(rootProject.ext.features.loginphone)
    implementation project(rootProject.ext.features.sessioncommon)
    implementation project(rootProject.ext.features.fcm_common)
    implementation project(rootProject.ext.features.profileCompletion)
    implementation project(rootProject.ext.features.agerestriction)
    implementation project(rootProject.ext.features.kyccentralized)

    implementation project(rootProject.ext.features.attachinvoice)
    implementation project(rootProject.ext.features.attachvoucher)

    implementation rootProject.ext.unifyDependencies.icon
    implementation rootProject.ext.unifyDependencies.components
    implementation rootProject.ext.unifyDependencies.principles
    implementation rootProject.ext.tkpdLibDependencies.youtubePlayer
    implementation rootProject.ext.tkpdInternalLibDependencies.akamaiBMP

    implementation rootProject.ext.tkpdInternalLibDependencies.cacheapi
    implementation rootProject.ext.tkpdInternalLibDependencies.cachemanager
    implementation rootProject.ext.tkpdInternalLibDependencies.globalconfig
    implementation project(rootProject.ext.libraries.graphql)
    implementation rootProject.ext.tkpdInternalLibDependencies.network
    implementation rootProject.ext.tkpdInternalLibDependencies.url
    implementation rootProject.ext.tkpdInternalLibDependencies.usecase
    implementation rootProject.ext.tkpdInternalLibDependencies.usersession
    implementation rootProject.ext.tkpdInternalLibDependencies.betaNotif

    implementation project(rootProject.ext.libraries.remoteResourceRequest)
    implementation rootProject.ext.debugToolsDependencies.chuck

    implementation(rootProject.ext.debugToolsDependencies.timber) {
        exclude group: 'org.jetbrains', module: 'annotations'
    }

    implementation project(rootProject.ext.libraries.analytics)
    if (rootProject.ext.debugToolsEnabled) {
        implementation project(rootProject.ext.libraries.analyticsDebugger)
    } else {
        implementation project(rootProject.ext.libraries.analyticsDebuggerNoop)
    }

    if (rootProject.ext.debugToolsEnabled) {
        implementation project(rootProject.ext.libraries.preReleaseInspector)
    } else {
        implementation project(rootProject.ext.libraries.preReleaseInspectorNoop)
    }

    if (rootProject.ext.debugToolsEnabled) {
        implementation rootProject.ext.tkpdInternalLibDependencies.fakeresponse
    } else {
        implementation rootProject.ext.tkpdInternalLibDependencies.fakeresponseNoOp
    }
    implementation(rootProject.ext.analyticsDependencies.moengage)

    implementation rootProject.ext.playServicesDependencies.analytics
    implementation rootProject.ext.playServicesDependencies.maps
    implementation rootProject.ext.serviceDependencies.crashlytics

    implementation project(rootProject.ext.libraries.playCore)
    implementation rootProject.ext.firebase.config
    implementation rootProject.ext.firebase.messaging

    implementation rootProject.ext.supportLibDependencies.cardViewV7
    implementation rootProject.ext.supportLibDependencies.appCompactV7
    implementation rootProject.ext.supportLibDependencies.design
    implementation rootProject.ext.supportLibDependencies.constraintLayout
    implementation rootProject.ext.supportLibDependencies.kotlinSupport

    implementation rootProject.ext.networkDependencies.retrofit
    implementation rootProject.ext.networkDependencies.converterGson
    implementation rootProject.ext.networkDependencies.adapterRxJava
    implementation rootProject.ext.networkDependencies.okHttp
    implementation rootProject.ext.networkDependencies.loggingInterceptor

    implementation rootProject.ext.miscDependencies.roundCornerProgressBar
    implementation rootProject.ext.miscDependencies.scannerZxing
    implementation rootProject.ext.miscDependencies.multiDex
    implementation rootProject.ext.miscDependencies.gson

    implementation rootProject.ext.miscDependencies.rxAndroid
    implementation rootProject.ext.miscDependencies.rxJava
    implementation rootProject.ext.miscDependencies.rxJavaMath

    implementation project(rootProject.ext.libraries.fingerprint)
    implementation project(rootProject.ext.libraries.logger)

    implementation(rootProject.ext.miscDependencies.imagecropper) {
        exclude group: "com.android.support"
    }
    implementation(rootProject.ext.miscDependencies.loaderviewlibrary) {
        exclude group: 'com.android.support'
    }
    compileOnly rootProject.ext.miscDependencies.javaxAnnotation
    implementation rootProject.ext.miscDependencies.dagger
    annotationProcessor rootProject.ext.miscDependencies.daggerCompiler

    implementation(rootProject.ext.tkpdLibDependencies.expandableOption) {
        exclude group: "com.android.support"
    }

    implementation(rootProject.ext.tkpdLibDependencies.showcase) {
        exclude group: "com.android.support"
    }


    implementation('de.hdodenhof:circleimageview:2.1.0') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    implementation rootProject.ext.monitoringDependencies.bugSnag

    if (rootProject.ext.debugToolsEnabled) {
        implementation project(project.ext.debugToolsDependencies.blockCanary)
    } else {
        implementation project.ext.debugToolsDependencies.blockCanaryNoOp
    }

    debugImplementation project.ext.debugToolsDependencies.leakCanary

    implementation rootProject.ext.deeplinkDispatchDependencies.deeplinkDispatch
    annotationProcessor rootProject.ext.deeplinkDispatchDependencies.deeplinkDispatchProcessor

    androidTestImplementation(rootProject.ext.testDependencies.espressoCore, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation rootProject.ext.testDependencies.junit

    implementation rootProject.ext.playServicesDependencies.tagManager
    implementation rootProject.ext.playServicesDependencies.tagManagerImpl
}

apply plugin: 'com.google.gms.google-services'
