buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.jakewharton:butterknife-gradle-plugin:8.4.0'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'android-apt'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'
apply plugin: 'maven'

group = 'com.tokopedia.core'
version = rootProject.ext.tkpdDigitalVersion

def getArtifactVersionCode() {
    return project.hasProperty('artifactVersion') ? artifactVersion : '1.0';
}

def getTkpdCore() {
    return project.hasProperty('isArtifact') ?
            rootProject.ext.tkpdDependencies.core : project(':tkpdcore');
}

def getTkpdPayment() {
    return project.hasProperty('isArtifact') ?
            rootProject.ext.tkpdDependencies.payment : project(':tkpdpayment');
}

def getTkpdDesign() {
    return project.hasProperty('isArtifact') ?
            rootProject.ext.tkpdDependencies.design : project(':tkpddesign');
}

def getTkpdLoyalty() {
    return project.hasProperty('isArtifact') ?
            rootProject.ext.tkpdDependencies.loyalty : project(':tkpdloyalty');
}

def getTkpdUseCase() {
    return project.hasProperty('isArtifact') ?
            rootProject.ext.tkpdDependencies.usecase : project(':tkpdusecase')
}

def getTkpdSession() {
    return project.hasProperty('isArtifact') ?
            rootProject.ext.tkpdDependencies.session : project(':tkpdsession')
}

publishing {
    publications {
        aar(MavenPublication) {
            groupId 'com.tokopedia.core'
            artifactId 'tkpddigital'
            version rootProject.ext.tkpdDigitalVersion
            artifact("$buildDir/outputs/aar/tkpddigital-release.aar")
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                configurations.compile.allDependencies.each {
                    if (it.group != null && it.name != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

artifactory {
    contextUrl = rootProject.ext.artifactoryUrl
    publish {
        repository {
            repoKey = 'libs-release-local'

            username = artifactory_username
            password = artifactory_password
        }
        defaults {
            publications('aar')
            publishArtifacts = true

            properties = ['qa.level': 'basic', 'q.os': 'android', 'dev.team': 'core']
            publishPom = true
        }
    }
}


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion "25.0.0"

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile getTkpdCore()
    compile getTkpdDesign()
    compile getTkpdPayment()
    compile getTkpdDesign()
    compile getTkpdLoyalty()
    compile getTkpdUseCase()
    compile getTkpdSession()

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-all:1.10.19'

    compile rootProject.ext.permissionDispatcherDependencies.permissionDispatcher
    apt rootProject.ext.permissionDispatcherDependencies.permissionDispatcherProcessor

    compile rootProject.ext.butterKnifeDependencies.butterKnife
    apt rootProject.ext.butterKnifeDependencies.butterKnifeCompiler

    compile rootProject.ext.deeplinkDispatchDependencies.deeplinkDispatch
    apt rootProject.ext.deeplinkDispatchDependencies.deeplinkDispatchProcessor
    compile rootProject.ext.playServicesDependencies.firebase

    compile rootProject.ext.playServicesDependencies.remoteConfig
    compile(rootProject.ext.tkpdLibDependencies.showcase) {
        exclude group: "com.android.support"
    }
    compile 'dnsjava:dnsjava:2.1.8'
    compile('com.exotel:verification:0.2.0@aar') {
        transitive = true;
        changing = true;
    }
}
