ext {
    getDynamicFeatureList = { final Project project->
        getDynamicFeatureListByProjectName(project.name)
    }

    getDynamicFeatureListByProjectName = { final String projectName->
        def projectTrim = projectName
        if (projectName.startsWith(":")) {
            projectTrim = projectName.replaceFirst(":", "")
        }
        if (useAARForDevBuild && !inDevModules.contains(projectTrim)) {
            return []
        }
        final def filemap = new File("buildconfig/appcompile/dynamic-feature-" + projectName + ".cfg")
        if (filemap.exists()) {
            return filemap.readLines().collect{it.trim()}
                    .findAll {!it.empty && it.startsWith("v")}
                    .collect {
                        it.replaceFirst("v", "").replaceAll("\t|\\s", "")
                    }
        }
        []
    }

    getDynamicFeatureIfEnabled = {Project project->
        if (project.hasProperty("disable-dynamic-feature")) {
            println("No dynamic features module is added. ")
            []
        } else {
            def prop = getDynamicFeatureList(project)
            println("Below Dynamic Feature is enabled: ")
            println(prop)
            println("END")
            prop
        }
    }

    generateAssetFile = {Project project, LinkedHashSet<String> strings ->
        def projectName = project.name
        def assetDir = new File(projectName + "/src/main/assets")
        def fileAsset = new File(projectName + "/src/main/assets/df.cfg")
        if (strings.size() > 0) {
            if (!assetDir.exists()) {
                assetDir.mkdirs()
            }
            if (fileAsset.exists()) {
                fileAsset.delete()
            }
            fileAsset.createNewFile()
            strings.collect {
                def pathArray = it.split(":")
                fileAsset.append(pathArray[pathArray.size() - 1] + "\n")
            }
        } else {
            if (fileAsset.exists()) {
                fileAsset.delete()
            }
        }
    }

    includeDynamicFeatureIfEnabled = {String projectName ->
        def projectTrim = projectName
        if (projectName.startsWith(":")) {
            projectTrim = projectName.replaceFirst(":", "")
        }
        if (useAARForDevBuild && !inDevModules.contains(projectTrim)) {
            return
        }

        if (gradle.properties.toString().contains("disable-dynamic-feature")) {
            println("Dynamic feature is disabled")
        } else {
            println("Dynamic feature is enabled. Inclusion is below:")
            getDynamicFeatureListByProjectName(projectName).each {
                def itTrim = ""
                if (it.startsWith(':')) {
                    itTrim = it.replaceFirst(":", "")
                } else {
                    itTrim = it
                }
                print("$itTrim; ")
                include("$itTrim")
            }
            println()
        }
    }

}