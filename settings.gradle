ext.isCiServer = System.getenv().containsKey("CI")

buildCache {
    local {
        enabled = !isCiServer
    }
    remote(HttpBuildCache) {
        url = "${ci_url}"
        push = isCiServer
//        allowUntrustedServer = true
        credentials {
            username = "${ci_username}"
            password = "${ci_password}"
        }
    }
}
if (file("./libraries/composite_lib/.composite-enable").exists()) {
    includeBuild('./libraries/composite_lib') {
        dependencySubstitution {
            substitute module('com.tokopedia.cache_manager:cache_manager') with project(':cache_manager')
            substitute module('com.tokopedia.usecase:usecase') with project(':use_case')
        }
    }
}
apply from: "buildconfig/appcompile/compile-libraries.gradle"
//apply from: "buildconfig/appcompile/compile-libraries-no-op.gradle"
apply from: "buildconfig/appcompile/compile-customerapp.gradle"
//apply from: "buildconfig/appcompile/compile-customerapp-no-op.gradle"
apply from: "buildconfig/appcompile/compile-sellerapp.gradle"
//apply from: "buildconfig/appcompile/compile-sellerapp-no-op.gradle"
apply from: "buildconfig/appcompile/compile-mitrapp.gradle"

